<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2012-03-09 09:52:46
	MapperTemplate:com.smartken.toyz4j.mybatis.OracleMapperTemplate
	Model:com.ett.visual.model.admin.DictModel 


 public static enum F { 
  Id,Text,Value,TypeFk,Remark,State  
 } 

private String Id;         //ID  VARCHAR2 50
private String Text;         //TEXT  VARCHAR2 500
private String Value;         //VALUE  VARCHAR2 500
private String TypeFk;         //TYPE_FK  VARCHAR2 50
private String Remark;         //REMARK  VARCHAR2 500
private String State;         //STATE  VARCHAR2 10
 

 public  class SimpleQueryModel extends com.ett.visual.model.admin.DictModel { 
  
 } 
--> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.visual.mapper.admin.IDictMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">VIS_ADMIN_DICT</sql>

<sql id="pk">id</sql>

<sql id="colums">
ID,TEXT,VALUE,TYPE_FK,REMARK,STATE 
</sql>

<sql id="insertCols">
#{Id,jdbcType=VARCHAR,javaType=String},
#{Text,jdbcType=VARCHAR,javaType=String},
#{Value,jdbcType=VARCHAR,javaType=String},
#{TypeFk,jdbcType=VARCHAR,javaType=String},
#{Remark,jdbcType=VARCHAR,javaType=String},
#{State,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">id=#{pk},</if>
TEXT=#{model.Text,jdbcType=VARCHAR,javaType=String},
VALUE=#{model.Value,jdbcType=VARCHAR,javaType=String},
TYPE_FK=#{model.TypeFk,jdbcType=VARCHAR,javaType=String},
REMARK=#{model.Remark,jdbcType=VARCHAR,javaType=String},
STATE=#{model.State,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.id desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.visual.model.admin.DictModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="VARCHAR"  javaType="String"/>
<result column="TEXT"  property="Text" jdbcType="VARCHAR"  javaType="String"/>
<result column="VALUE"  property="Value" jdbcType="VARCHAR"  javaType="String"/>
<result column="TYPE_FK"  property="TypeFk" jdbcType="VARCHAR"  javaType="String"/>
<result column="REMARK"  property="Remark" jdbcType="VARCHAR"  javaType="String"/>
<result column="STATE"  property="State" jdbcType="VARCHAR"  javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID like #{model.Id,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.Text neq null">and m.TEXT like #{model.Text,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.Value neq null">and m.VALUE like #{model.Value,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.TypeFk neq null">and m.TYPE_FK like #{model.TypeFk,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.Remark neq null">and m.REMARK like #{model.Remark,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.State neq null">and m.STATE like #{model.State,jdbcType=VARCHAR ,javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=VARCHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=VARCHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.visual.model.admin.DictModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>