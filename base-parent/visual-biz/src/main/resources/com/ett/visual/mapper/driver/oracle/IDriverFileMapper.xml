<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2012-03-09 02:56:41
	MapperTemplate:com.smartken.toyz4j.mybatis.OracleMapperTemplate
	Model:com.ett.visual.model.driver.DriverFileModel 


 public static enum F { 
  Id,Title,Remark,DriverPk,CreateDate,LastModifyDate,OperPk,Rec,Type,Status,CompleteInd,
CleanInd,IndexInd,LastCheckDate,SecretLevel  
 } 

private String Id;         //ID  VARCHAR2 50
private String Title;         //TITLE  VARCHAR2 50
private String Remark;         //REMARK  VARCHAR2 500
private String DriverPk;         //DRIVER_PK  VARCHAR2 50
private Date CreateDate;         //CREATE_DATE  DATE 0
private Date LastModifyDate;         //LAST_MODIFY_DATE  DATE 0
private String OperPk;         //OPER_PK  VARCHAR2 50
private byte[] Rec;         //REC  BLOB -1
private String Type;         //TYPE  VARCHAR2 50
private String Status;         //STATUS  VARCHAR2 10
private String CompleteInd;         //COMPLETE_IND  CHAR 1
private String CleanInd;         //CLEAN_IND  CHAR 1
private String IndexInd;         //INDEX_IND  CHAR 1
private Date LastCheckDate;         //LAST_CHECK_DATE  DATE 0
private Integer SecretLevel;         //SECRET_LEVEL  NUMBER 38
 

 public  class SimpleQueryModel extends com.ett.visual.model.driver.DriverFileModel { 
  private Date minCreateDate ; 
 private Date maxCreateDate ; 
 private Date minLastModifyDate ; 
 private Date maxLastModifyDate ; 
 private Date minLastCheckDate ; 
 private Date maxLastCheckDate ; 
 private Integer minSecretLevel ; 
 private Integer maxSecretLevel ; 
 
 } 
--> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.visual.mapper.driver.IDriverFileMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">VIS_DRIVER_FILE</sql>

<sql id="pk">id</sql>

<sql id="colums">
ID,TITLE,REMARK,DRIVER_PK,CREATE_DATE,LAST_MODIFY_DATE,OPER_PK,REC,TYPE,STATUS,COMPLETE_IND,
CLEAN_IND,INDEX_IND,LAST_CHECK_DATE,SECRET_LEVEL 
</sql>

<sql id="insertCols">
#{Id,jdbcType=VARCHAR,javaType=String},
#{Title,jdbcType=VARCHAR,javaType=String},
#{Remark,jdbcType=VARCHAR,javaType=String},
#{DriverPk,jdbcType=VARCHAR,javaType=String},
#{CreateDate,jdbcType=DATE,javaType=Date},
#{LastModifyDate,jdbcType=DATE,javaType=Date},
#{OperPk,jdbcType=VARCHAR,javaType=String},
#{Rec,jdbcType=BLOB},
#{Type,jdbcType=VARCHAR,javaType=String},
#{Status,jdbcType=VARCHAR,javaType=String},
#{CompleteInd,jdbcType=CHAR,javaType=String},
#{CleanInd,jdbcType=CHAR,javaType=String},
#{IndexInd,jdbcType=CHAR,javaType=String},
#{LastCheckDate,jdbcType=DATE,javaType=Date},
#{SecretLevel,jdbcType=INTEGER,javaType=Integer},

</sql>

<sql id="updateCols">
<if test="pk neq null">id=#{pk},</if>
TITLE=#{model.Title,jdbcType=VARCHAR,javaType=String},
REMARK=#{model.Remark,jdbcType=VARCHAR,javaType=String},
DRIVER_PK=#{model.DriverPk,jdbcType=VARCHAR,javaType=String},
CREATE_DATE=#{model.CreateDate,jdbcType=DATE,javaType=Date},
LAST_MODIFY_DATE=#{model.LastModifyDate,jdbcType=DATE,javaType=Date},
OPER_PK=#{model.OperPk,jdbcType=VARCHAR,javaType=String},
REC=#{model.Rec,jdbcType=BLOB},
TYPE=#{model.Type,jdbcType=VARCHAR,javaType=String},
STATUS=#{model.Status,jdbcType=VARCHAR,javaType=String},
COMPLETE_IND=#{model.CompleteInd,jdbcType=CHAR,javaType=String},
CLEAN_IND=#{model.CleanInd,jdbcType=CHAR,javaType=String},
INDEX_IND=#{model.IndexInd,jdbcType=CHAR,javaType=String},
LAST_CHECK_DATE=#{model.LastCheckDate,jdbcType=DATE,javaType=Date},
SECRET_LEVEL=#{model.SecretLevel,jdbcType=INTEGER,javaType=Integer},

</sql>

<sql id="orderby">order by m.id desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.visual.model.driver.DriverFileModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="VARCHAR"  javaType="String"/>
<result column="TITLE"  property="Title" jdbcType="VARCHAR"  javaType="String"/>
<result column="REMARK"  property="Remark" jdbcType="VARCHAR"  javaType="String"/>
<result column="DRIVER_PK"  property="DriverPk" jdbcType="VARCHAR"  javaType="String"/>
<result column="CREATE_DATE"  property="CreateDate" jdbcType="DATE"  javaType="Date"/>
<result column="LAST_MODIFY_DATE"  property="LastModifyDate" jdbcType="DATE"  javaType="Date"/>
<result column="OPER_PK"  property="OperPk" jdbcType="VARCHAR"  javaType="String"/>
<result column="REC"  property="Rec"  />
<result column="TYPE"  property="Type" jdbcType="VARCHAR"  javaType="String"/>
<result column="STATUS"  property="Status" jdbcType="VARCHAR"  javaType="String"/>
<result column="COMPLETE_IND"  property="CompleteInd" jdbcType="CHAR"  javaType="String"/>
<result column="CLEAN_IND"  property="CleanInd" jdbcType="CHAR"  javaType="String"/>
<result column="INDEX_IND"  property="IndexInd" jdbcType="CHAR"  javaType="String"/>
<result column="LAST_CHECK_DATE"  property="LastCheckDate" jdbcType="DATE"  javaType="Date"/>
<result column="SECRET_LEVEL"  property="SecretLevel" jdbcType="INTEGER"  javaType="Integer"/>

 </resultMap>


<sql id="selectCondition">
<if test="model['Id'] and model['Id'] neq null">and m.ID like #{model.Id,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['Title'] and model['Title'] neq null">and m.TITLE like #{model.Title,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['Remark'] and model['Remark'] neq null">and m.REMARK like #{model.Remark,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['DriverPk'] and model['DriverPk'] neq null">and m.DRIVER_PK like #{model.DriverPk,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['CreateDate'] and model['CreateDate'] neq null">and to_char(m.CREATE_DATE,'YYYY-MM-DD') = to_char(#{model.CreateDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['minCreateDate'] and model['minCreateDate'] neq null">and to_char(m.CREATE_DATE,'YYYY-MM-DD') &gt;= to_char(#{model.minCreateDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['maxCreateDate'] and model['maxCreateDate'] neq null">and to_char(m.CREATE_DATE,'YYYY-MM-DD') &lt;= to_char(#{model.maxCreateDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['LastModifyDate'] and model['LastModifyDate'] neq null">and to_char(m.LAST_MODIFY_DATE,'YYYY-MM-DD') = to_char(#{model.LastModifyDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['minLastModifyDate'] and model['minLastModifyDate'] neq null">and to_char(m.LAST_MODIFY_DATE,'YYYY-MM-DD') &gt;= to_char(#{model.minLastModifyDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['maxLastModifyDate'] and model['maxLastModifyDate'] neq null">and to_char(m.LAST_MODIFY_DATE,'YYYY-MM-DD') &lt;= to_char(#{model.maxLastModifyDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['OperPk'] and model['OperPk'] neq null">and m.OPER_PK like #{model.OperPk,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['Rec'] and model['Rec'] neq null">and m.REC = #{model.Rec,jdbcType=BLOB, javaType=Byte } </if> 
<if test="model['Type'] and model['Type'] neq null">and m.TYPE like #{model.Type,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['Status'] and model['Status'] neq null">and m.STATUS like #{model.Status,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model['CompleteInd'] and model['CompleteInd'] neq null">and m.COMPLETE_IND like #{model.CompleteInd,jdbcType=CHAR ,javaType=String } </if> 
<if test="model['CleanInd'] and model['CleanInd'] neq null">and m.CLEAN_IND like #{model.CleanInd,jdbcType=CHAR ,javaType=String } </if> 
<if test="model['IndexInd'] and model['IndexInd'] neq null">and m.INDEX_IND like #{model.IndexInd,jdbcType=CHAR ,javaType=String } </if> 
<if test="model['LastCheckDate'] and model['LastCheckDate'] neq null">and to_char(m.LAST_CHECK_DATE,'YYYY-MM-DD') = to_char(#{model.LastCheckDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['minLastCheckDate'] and model['minLastCheckDate'] neq null">and to_char(m.LAST_CHECK_DATE,'YYYY-MM-DD') &gt;= to_char(#{model.minLastCheckDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['maxLastCheckDate'] and model['maxLastCheckDate'] neq null">and to_char(m.LAST_CHECK_DATE,'YYYY-MM-DD') &lt;= to_char(#{model.maxLastCheckDate,jdbcType=DATE, javaType=Date },'YYYY-MM-DD') </if> 
<if test="model['SecretLevel'] and model['SecretLevel'] neq null">and m.SECRET_LEVEL = #{model.SecretLevel,jdbcType=INTEGER, javaType=Integer } </if> 
<if test="model['minSecretLevel'] and model['minSecretLevel'] neq null">and m.SECRET_LEVEL &gt;= #{model.minSecretLevel,jdbcType=INTEGER, javaType=Integer } </if> 
<if test="model['maxSecretLevel'] and model['maxSecretLevel'] neq null">and m.SECRET_LEVEL &lt;= #{model.maxSecretLevel,jdbcType=INTEGER, javaType=Integer } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=VARCHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=VARCHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.visual.model.driver.DriverFileModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>