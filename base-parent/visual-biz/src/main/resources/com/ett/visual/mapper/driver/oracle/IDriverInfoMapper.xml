<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2012-03-09 09:52:46
	MapperTemplate:com.smartken.toyz4j.mybatis.OracleMapperTemplate
	Model:com.ett.visual.model.driver.DriverInfoModel 


 public static enum F { 
  Id,Name,IdcardNo,FileNo,Phone,SchoolCode  
 } 

private String Id;         //ID  VARCHAR2 50
private String Name;         //NAME  VARCHAR2 50
private String IdcardNo;         //IDCARD_NO  VARCHAR2 50
private String FileNo;         //FILE_NO  VARCHAR2 50
private String Phone;         //PHONE  VARCHAR2 50
private String SchoolCode;         //SCHOOL_CODE  VARCHAR2 20
 

 public  class SimpleQueryModel extends com.ett.visual.model.driver.DriverInfoModel { 
  
 } 
--> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.visual.mapper.driver.IDriverInfoMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">VIS_DRIVER_INFO</sql>

<sql id="pk">id</sql>

<sql id="colums">
ID,NAME,IDCARD_NO,FILE_NO,PHONE,SCHOOL_CODE 
</sql>

<sql id="insertCols">
#{Id,jdbcType=VARCHAR,javaType=String},
#{Name,jdbcType=VARCHAR,javaType=String},
#{IdcardNo,jdbcType=VARCHAR,javaType=String},
#{FileNo,jdbcType=VARCHAR,javaType=String},
#{Phone,jdbcType=VARCHAR,javaType=String},
#{SchoolCode,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">id=#{pk},</if>
NAME=#{model.Name,jdbcType=VARCHAR,javaType=String},
IDCARD_NO=#{model.IdcardNo,jdbcType=VARCHAR,javaType=String},
FILE_NO=#{model.FileNo,jdbcType=VARCHAR,javaType=String},
PHONE=#{model.Phone,jdbcType=VARCHAR,javaType=String},
SCHOOL_CODE=#{model.SchoolCode,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.id desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.visual.model.driver.DriverInfoModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="VARCHAR"  javaType="String"/>
<result column="NAME"  property="Name" jdbcType="VARCHAR"  javaType="String"/>
<result column="IDCARD_NO"  property="IdcardNo" jdbcType="VARCHAR"  javaType="String"/>
<result column="FILE_NO"  property="FileNo" jdbcType="VARCHAR"  javaType="String"/>
<result column="PHONE"  property="Phone" jdbcType="VARCHAR"  javaType="String"/>
<result column="SCHOOL_CODE"  property="SchoolCode" jdbcType="VARCHAR"  javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID like #{model.Id,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.Name neq null">and m.NAME like #{model.Name,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.IdcardNo neq null">and m.IDCARD_NO like #{model.IdcardNo,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.FileNo neq null">and m.FILE_NO like #{model.FileNo,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.Phone neq null">and m.PHONE like #{model.Phone,jdbcType=VARCHAR ,javaType=String } </if> 
<if test="model.SchoolCode neq null">and m.SCHOOL_CODE like #{model.SchoolCode,jdbcType=VARCHAR ,javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=VARCHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=VARCHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.visual.model.driver.DriverInfoModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>