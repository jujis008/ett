<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-25 10:26:46
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.admin.DictModel 


 public static enum F { 
  Id,CTypename,CDictText,CDictValue,CDes1,CDes2,CDes3,CState  
 } 

private Integer Id;         //ID  NUMBER 38
private String CTypename;         //C_TYPENAME  VARCHAR2 60
private String CDictText;         //C_DICT_TEXT  VARCHAR2 30
private String CDictValue;         //C_DICT_VALUE  VARCHAR2 30
private String CDes1;         //C_DES1  VARCHAR2 30
private String CDes2;         //C_DES2  VARCHAR2 30
private String CDes3;         //C_DES3  VARCHAR2 30
private String CState;         //C_STATE  VARCHAR2 10
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.admin.IDictMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">TABLE_DICTS</sql>

<sql id="pk">ID</sql>

<sql id="colums">
ID,C_TYPENAME,C_DICT_TEXT,C_DICT_VALUE,C_DES1,C_DES2,C_DES3,C_STATE 
</sql>

<sql id="insertCols">
#{Id,jdbcType=INTEGER,javaType=Integer},
#{CTypename,jdbcType=VARCHAR,javaType=String},
#{CDictText,jdbcType=VARCHAR,javaType=String},
#{CDictValue,jdbcType=VARCHAR,javaType=String},
#{CDes1,jdbcType=VARCHAR,javaType=String},
#{CDes2,jdbcType=VARCHAR,javaType=String},
#{CDes3,jdbcType=VARCHAR,javaType=String},
#{CState,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">ID=#{pk}</if>,
C_TYPENAME=#{model.CTypename,jdbcType=VARCHAR,javaType=String},
C_DICT_TEXT=#{model.CDictText,jdbcType=VARCHAR,javaType=String},
C_DICT_VALUE=#{model.CDictValue,jdbcType=VARCHAR,javaType=String},
C_DES1=#{model.CDes1,jdbcType=VARCHAR,javaType=String},
C_DES2=#{model.CDes2,jdbcType=VARCHAR,javaType=String},
C_DES3=#{model.CDes3,jdbcType=VARCHAR,javaType=String},
C_STATE=#{model.CState,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.ID desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.admin.DictModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_TYPENAME"  property="CTypename" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DICT_TEXT"  property="CDictText" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DICT_VALUE"  property="CDictValue" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DES1"  property="CDes1" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DES2"  property="CDes2" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DES3"  property="CDes3" jdbcType="VARCHAR" javaType="String"/>
<result column="C_STATE"  property="CState" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID = #{model.Id,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.CTypename neq null">and m.C_TYPENAME like #{model.CTypename,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDictText neq null">and m.C_DICT_TEXT like #{model.CDictText,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDictValue neq null">and m.C_DICT_VALUE like #{model.CDictValue,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDes1 neq null">and m.C_DES1 like #{model.CDes1,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDes2 neq null">and m.C_DES2 like #{model.CDes2,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDes3 neq null">and m.C_DES3 like #{model.CDes3,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CState neq null">and m.C_STATE like #{model.CState,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=INTEGER,javaType=Integer}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=INTEGER,javaType=Integer}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.admin.DictModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>