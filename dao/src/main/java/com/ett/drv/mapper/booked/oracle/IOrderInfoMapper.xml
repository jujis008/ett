<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-24 02:10:51
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.booked.BookedOrderInfoModel 


 public static enum F { 
  Id,CHmhp,CKsccCode,CKscc,CKsddCode,CKsdd,IKm,DateKsrq,DatePxshrq,IPaibanid,CJbr,
CDlrCode,CDlr,CJlyIdcard,CJlyXm,CKssj,CLsh,CCheckOperator,CCheckDate,IChecked,CXm,
CIdcard,CCheckResult,CZjcx  
 } 

private Integer Id;         //ID  NUMBER 38
private String CHmhp;         //C_HMHP  VARCHAR2 30
private String CKsccCode;         //C_KSCC_CODE  VARCHAR2 30
private String CKscc;         //C_KSCC  VARCHAR2 200
private String CKsddCode;         //C_KSDD_CODE  VARCHAR2 30
private String CKsdd;         //C_KSDD  VARCHAR2 200
private Integer IKm;         //I_KM  NUMBER 38
private String DateKsrq;         //DATE_KSRQ  VARCHAR2 30
private String DatePxshrq;         //DATE_PXSHRQ  VARCHAR2 30
private Integer IPaibanid;         //I_PAIBANID  NUMBER 38
private String CJbr;         //C_JBR  VARCHAR2 30
private String CDlrCode;         //C_DLR_CODE  VARCHAR2 30
private String CDlr;         //C_DLR  VARCHAR2 200
private String CJlyIdcard;         //C_JLY_IDCARD  VARCHAR2 30
private String CJlyXm;         //C_JLY_XM  VARCHAR2 30
private String CKssj;         //C_KSSJ  VARCHAR2 20
private String CLsh;         //C_LSH  VARCHAR2 20
private String CCheckOperator;         //C_CHECK_OPERATOR  VARCHAR2 30
private String CCheckDate;         //C_CHECK_DATE  VARCHAR2 30
private Integer IChecked;         //I_CHECKED  NUMBER 38
private String CXm;         //C_XM  VARCHAR2 30
private String CIdcard;         //C_IDCARD  VARCHAR2 30
private String CCheckResult;         //C_CHECK_RESULT  VARCHAR2 1,000
private String CZjcx;         //C_ZJCX  VARCHAR2 30
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.booked.IOrderInfoMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">TABLE_YUYUE_INFO</sql>

<sql id="pk">ID</sql>

<sql id="colums">
ID,C_HMHP,C_KSCC_CODE,C_KSCC,C_KSDD_CODE,C_KSDD,I_KM,DATE_KSRQ,DATE_PXSHRQ,I_PAIBANID,C_JBR,
C_DLR_CODE,C_DLR,C_JLY_IDCARD,C_JLY_XM,C_KSSJ,C_LSH,C_CHECK_OPERATOR,C_CHECK_DATE,I_CHECKED,C_XM,
C_IDCARD,C_CHECK_RESULT,C_ZJCX 
</sql>

<sql id="insertCols">
seq_yuyue_info.nextval,
#{CHmhp,jdbcType=VARCHAR,javaType=String},
#{CKsccCode,jdbcType=VARCHAR,javaType=String},
#{CKscc,jdbcType=VARCHAR,javaType=String},
#{CKsddCode,jdbcType=VARCHAR,javaType=String},
#{CKsdd,jdbcType=VARCHAR,javaType=String},
#{IKm,jdbcType=INTEGER,javaType=Integer},
#{DateKsrq,jdbcType=VARCHAR,javaType=String},
#{DatePxshrq,jdbcType=VARCHAR,javaType=String},
#{IPaibanid,jdbcType=INTEGER,javaType=Integer},
#{CJbr,jdbcType=VARCHAR,javaType=String},
#{CDlrCode,jdbcType=VARCHAR,javaType=String},
#{CDlr,jdbcType=VARCHAR,javaType=String},
#{CJlyIdcard,jdbcType=VARCHAR,javaType=String},
#{CJlyXm,jdbcType=VARCHAR,javaType=String},
#{CKssj,jdbcType=VARCHAR,javaType=String},
#{CLsh,jdbcType=VARCHAR,javaType=String},
#{CCheckOperator,jdbcType=VARCHAR,javaType=String},
#{CCheckDate,jdbcType=VARCHAR,javaType=String},
#{IChecked,jdbcType=INTEGER,javaType=Integer},
#{CXm,jdbcType=VARCHAR,javaType=String},
#{CIdcard,jdbcType=VARCHAR,javaType=String},
#{CCheckResult,jdbcType=VARCHAR,javaType=String},
#{CZjcx,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">ID=#{pk}</if>,
C_HMHP=#{model.CHmhp,jdbcType=VARCHAR,javaType=String},
C_KSCC_CODE=#{model.CKsccCode,jdbcType=VARCHAR,javaType=String},
C_KSCC=#{model.CKscc,jdbcType=VARCHAR,javaType=String},
C_KSDD_CODE=#{model.CKsddCode,jdbcType=VARCHAR,javaType=String},
C_KSDD=#{model.CKsdd,jdbcType=VARCHAR,javaType=String},
I_KM=#{model.IKm,jdbcType=INTEGER,javaType=Integer},
DATE_KSRQ=#{model.DateKsrq,jdbcType=VARCHAR,javaType=String},
DATE_PXSHRQ=#{model.DatePxshrq,jdbcType=VARCHAR,javaType=String},
I_PAIBANID=#{model.IPaibanid,jdbcType=INTEGER,javaType=Integer},
C_JBR=#{model.CJbr,jdbcType=VARCHAR,javaType=String},
C_DLR_CODE=#{model.CDlrCode,jdbcType=VARCHAR,javaType=String},
C_DLR=#{model.CDlr,jdbcType=VARCHAR,javaType=String},
C_JLY_IDCARD=#{model.CJlyIdcard,jdbcType=VARCHAR,javaType=String},
C_JLY_XM=#{model.CJlyXm,jdbcType=VARCHAR,javaType=String},
C_KSSJ=#{model.CKssj,jdbcType=VARCHAR,javaType=String},
C_LSH=#{model.CLsh,jdbcType=VARCHAR,javaType=String},
C_CHECK_OPERATOR=#{model.CCheckOperator,jdbcType=VARCHAR,javaType=String},
C_CHECK_DATE=#{model.CCheckDate,jdbcType=VARCHAR,javaType=String},
I_CHECKED=#{model.IChecked,jdbcType=INTEGER,javaType=Integer},
C_XM=#{model.CXm,jdbcType=VARCHAR,javaType=String},
C_IDCARD=#{model.CIdcard,jdbcType=VARCHAR,javaType=String},
C_CHECK_RESULT=#{model.CCheckResult,jdbcType=VARCHAR,javaType=String},
C_ZJCX=#{model.CZjcx,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.ID desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.booked.BookedOrderInfoModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_HMHP"  property="CHmhp" jdbcType="VARCHAR" javaType="String"/>
<result column="C_KSCC_CODE"  property="CKsccCode" jdbcType="VARCHAR" javaType="String"/>
<result column="C_KSCC"  property="CKscc" jdbcType="VARCHAR" javaType="String"/>
<result column="C_KSDD_CODE"  property="CKsddCode" jdbcType="VARCHAR" javaType="String"/>
<result column="C_KSDD"  property="CKsdd" jdbcType="VARCHAR" javaType="String"/>
<result column="I_KM"  property="IKm" jdbcType="INTEGER" javaType="Integer"/>
<result column="DATE_KSRQ"  property="DateKsrq" jdbcType="VARCHAR" javaType="String"/>
<result column="DATE_PXSHRQ"  property="DatePxshrq" jdbcType="VARCHAR" javaType="String"/>
<result column="I_PAIBANID"  property="IPaibanid" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_JBR"  property="CJbr" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DLR_CODE"  property="CDlrCode" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DLR"  property="CDlr" jdbcType="VARCHAR" javaType="String"/>
<result column="C_JLY_IDCARD"  property="CJlyIdcard" jdbcType="VARCHAR" javaType="String"/>
<result column="C_JLY_XM"  property="CJlyXm" jdbcType="VARCHAR" javaType="String"/>
<result column="C_KSSJ"  property="CKssj" jdbcType="VARCHAR" javaType="String"/>
<result column="C_LSH"  property="CLsh" jdbcType="VARCHAR" javaType="String"/>
<result column="C_CHECK_OPERATOR"  property="CCheckOperator" jdbcType="VARCHAR" javaType="String"/>
<result column="C_CHECK_DATE"  property="CCheckDate" jdbcType="VARCHAR" javaType="String"/>
<result column="I_CHECKED"  property="IChecked" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_XM"  property="CXm" jdbcType="VARCHAR" javaType="String"/>
<result column="C_IDCARD"  property="CIdcard" jdbcType="VARCHAR" javaType="String"/>
<result column="C_CHECK_RESULT"  property="CCheckResult" jdbcType="VARCHAR" javaType="String"/>
<result column="C_ZJCX"  property="CZjcx" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID = #{model.Id,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.CHmhp neq null">and m.C_HMHP = #{model.CHmhp,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CKsccCode neq null">and m.C_KSCC_CODE = #{model.CKsccCode,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CKscc neq null">and m.C_KSCC = #{model.CKscc,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CKsddCode neq null">and m.C_KSDD_CODE = #{model.CKsddCode,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CKsdd neq null">and m.C_KSDD = #{model.CKsdd,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.IKm neq null">and m.I_KM = #{model.IKm,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.DateKsrq neq null">and m.DATE_KSRQ = #{model.DateKsrq,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.DatePxshrq neq null">and m.DATE_PXSHRQ = #{model.DatePxshrq,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.IPaibanid neq null">and m.I_PAIBANID = #{model.IPaibanid,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.CJbr neq null">and m.C_JBR = #{model.CJbr,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDlrCode neq null">and m.C_DLR_CODE = #{model.CDlrCode,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CDlr neq null">and m.C_DLR = #{model.CDlr,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CJlyIdcard neq null">and m.C_JLY_IDCARD = #{model.CJlyIdcard,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CJlyXm neq null">and m.C_JLY_XM = #{model.CJlyXm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CKssj neq null">and m.C_KSSJ = #{model.CKssj,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CLsh neq null">and m.C_LSH = #{model.CLsh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CCheckOperator neq null">and m.C_CHECK_OPERATOR = #{model.CCheckOperator,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CCheckDate neq null">and m.C_CHECK_DATE = #{model.CCheckDate,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.IChecked neq null">and m.I_CHECKED = #{model.IChecked,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.CXm neq null">and m.C_XM = #{model.CXm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CIdcard neq null">and m.C_IDCARD = #{model.CIdcard,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CCheckResult neq null">and m.C_CHECK_RESULT = #{model.CCheckResult,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CZjcx neq null">and m.C_ZJCX = #{model.CZjcx,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=INTEGER,javaType=Integer}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=INTEGER,javaType=Integer}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.booked.BookedOrderInfoModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>