<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-24 11:22:31
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.booked.PersonChangeModel 


 public static enum F { 
  id,cname,cidcardType,cidcard,cdabh,coldPhone,cnewPhone,cnewAddress,cnewPostcode,isyn,dateCreatetime,
ccheckOperator,ccheckDate,ichecked,ccheckResult,cemail  
 } 

private Integer id;         //ID  NUMBER 38
private String cname;         //C_NAME  VARCHAR2 30
private String cidcardType;         //C_IDCARD_TYPE  VARCHAR2 4
private String cidcard;         //C_IDCARD  VARCHAR2 30
private String cdabh;         //C_DABH  VARCHAR2 30
private String coldPhone;         //C_OLD_PHONE  VARCHAR2 11
private String cnewPhone;         //C_NEW_PHONE  VARCHAR2 11
private String cnewAddress;         //C_NEW_ADDRESS  VARCHAR2 300
private String cnewPostcode;         //C_NEW_POSTCODE  VARCHAR2 12
private Integer isyn;         //I_SYN  NUMBER 38
private Date dateCreatetime;         //DATE_CREATETIME  DATE 0
private String ccheckOperator;         //C_CHECK_OPERATOR  VARCHAR2 30
private String ccheckDate;         //C_CHECK_DATE  VARCHAR2 30
private Integer ichecked;         //I_CHECKED  NUMBER 38
private String ccheckResult;         //C_CHECK_RESULT  VARCHAR2 1,000
private String cemail;         //C_EMAIL  VARCHAR2 100
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.booked.IPersonChangeMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">TABLE_PERSON_CHANGE_INFO</sql>

<sql id="pk">ID</sql>

<sql id="colums">
ID,C_NAME,C_IDCARD_TYPE,C_IDCARD,C_DABH,C_OLD_PHONE,C_NEW_PHONE,C_NEW_ADDRESS,C_NEW_POSTCODE,I_SYN,DATE_CREATETIME,
C_CHECK_OPERATOR,C_CHECK_DATE,I_CHECKED,C_CHECK_RESULT,C_EMAIL 
</sql>

<sql id="insertCols">
#{id,jdbcType=INTEGER,javaType=Integer},
#{cname,jdbcType=VARCHAR,javaType=String},
#{cidcardType,jdbcType=VARCHAR,javaType=String},
#{cidcard,jdbcType=VARCHAR,javaType=String},
#{cdabh,jdbcType=VARCHAR,javaType=String},
#{coldPhone,jdbcType=VARCHAR,javaType=String},
#{cnewPhone,jdbcType=VARCHAR,javaType=String},
#{cnewAddress,jdbcType=VARCHAR,javaType=String},
#{cnewPostcode,jdbcType=VARCHAR,javaType=String},
#{isyn,jdbcType=INTEGER,javaType=Integer},
#{dateCreatetime,jdbcType=DATE,javaType=Date},
#{ccheckOperator,jdbcType=VARCHAR,javaType=String},
#{ccheckDate,jdbcType=VARCHAR,javaType=String},
#{ichecked,jdbcType=INTEGER,javaType=Integer},
#{ccheckResult,jdbcType=VARCHAR,javaType=String},
#{cemail,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">ID=#{pk}</if>,
C_NAME=#{model.cname,jdbcType=VARCHAR,javaType=String},
C_IDCARD_TYPE=#{model.cidcardType,jdbcType=VARCHAR,javaType=String},
C_IDCARD=#{model.cidcard,jdbcType=VARCHAR,javaType=String},
C_DABH=#{model.cdabh,jdbcType=VARCHAR,javaType=String},
C_OLD_PHONE=#{model.coldPhone,jdbcType=VARCHAR,javaType=String},
C_NEW_PHONE=#{model.cnewPhone,jdbcType=VARCHAR,javaType=String},
C_NEW_ADDRESS=#{model.cnewAddress,jdbcType=VARCHAR,javaType=String},
C_NEW_POSTCODE=#{model.cnewPostcode,jdbcType=VARCHAR,javaType=String},
I_SYN=#{model.isyn,jdbcType=INTEGER,javaType=Integer},
DATE_CREATETIME=#{model.dateCreatetime,jdbcType=DATE,javaType=Date},
C_CHECK_OPERATOR=#{model.ccheckOperator,jdbcType=VARCHAR,javaType=String},
C_CHECK_DATE=#{model.ccheckDate,jdbcType=VARCHAR,javaType=String},
I_CHECKED=#{model.ichecked,jdbcType=INTEGER,javaType=Integer},
C_CHECK_RESULT=#{model.ccheckResult,jdbcType=VARCHAR,javaType=String},
C_EMAIL=#{model.cemail,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.ID desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.booked.PersonChangeModel" id="resultMap">
 <id column="ID"  property="id" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_NAME"  property="cname" jdbcType="VARCHAR" javaType="String"/>
<result column="C_IDCARD_TYPE"  property="cidcardType" jdbcType="VARCHAR" javaType="String"/>
<result column="C_IDCARD"  property="cidcard" jdbcType="VARCHAR" javaType="String"/>
<result column="C_DABH"  property="cdabh" jdbcType="VARCHAR" javaType="String"/>
<result column="C_OLD_PHONE"  property="coldPhone" jdbcType="VARCHAR" javaType="String"/>
<result column="C_NEW_PHONE"  property="cnewPhone" jdbcType="VARCHAR" javaType="String"/>
<result column="C_NEW_ADDRESS"  property="cnewAddress" jdbcType="VARCHAR" javaType="String"/>
<result column="C_NEW_POSTCODE"  property="cnewPostcode" jdbcType="VARCHAR" javaType="String"/>
<result column="I_SYN"  property="isyn" jdbcType="INTEGER" javaType="Integer"/>
<result column="DATE_CREATETIME"  property="dateCreatetime" jdbcType="DATE" javaType="Date"/>
<result column="C_CHECK_OPERATOR"  property="ccheckOperator" jdbcType="VARCHAR" javaType="String"/>
<result column="C_CHECK_DATE"  property="ccheckDate" jdbcType="VARCHAR" javaType="String"/>
<result column="I_CHECKED"  property="ichecked" jdbcType="INTEGER" javaType="Integer"/>
<result column="C_CHECK_RESULT"  property="ccheckResult" jdbcType="VARCHAR" javaType="String"/>
<result column="C_EMAIL"  property="cemail" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.id neq null">and m.ID = #{model.id,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.cname neq null">and m.C_NAME = #{model.cname,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cidcardType neq null">and m.C_IDCARD_TYPE = #{model.cidcardType,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cidcard neq null">and m.C_IDCARD = #{model.cidcard,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cdabh neq null">and m.C_DABH = #{model.cdabh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.coldPhone neq null">and m.C_OLD_PHONE = #{model.coldPhone,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cnewPhone neq null">and m.C_NEW_PHONE = #{model.cnewPhone,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cnewAddress neq null">and m.C_NEW_ADDRESS = #{model.cnewAddress,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cnewPostcode neq null">and m.C_NEW_POSTCODE = #{model.cnewPostcode,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.isyn neq null">and m.I_SYN = #{model.isyn,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.dateCreatetime neq null">and to_char(m.DATE_CREATETIME,'YYYY-MM-DD') = to_char(#{model.dateCreatetime,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.ccheckOperator neq null">and m.C_CHECK_OPERATOR = #{model.ccheckOperator,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.ccheckDate neq null">and m.C_CHECK_DATE = #{model.ccheckDate,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.ichecked neq null">and m.I_CHECKED = #{model.ichecked,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.ccheckResult neq null">and m.C_CHECK_RESULT = #{model.ccheckResult,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.cemail neq null">and m.C_EMAIL = #{model.cemail,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.id,jdbcType=INTEGER,javaType=Integer}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{id,jdbcType=INTEGER,javaType=Integer}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.booked.PersonChangeModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>