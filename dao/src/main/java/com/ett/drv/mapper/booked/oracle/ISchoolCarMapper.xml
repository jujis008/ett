<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-26 11:06:52
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.booked.SchoolCarModel 


 public static enum F { 
  Id,Clpp,Coachno,Depcode,Depname,Glbm,Hmhp,Idcard,Mobile,Name  
 } 

private Integer Id;         //ID  NUMBER 19
private String Clpp;         //CLPP  VARCHAR2 255
private String Coachno;         //COACHNO  VARCHAR2 255
private String Depcode;         //DEPCODE  VARCHAR2 255
private String Depname;         //DEPNAME  VARCHAR2 255
private String Glbm;         //GLBM  VARCHAR2 255
private String Hmhp;         //HMHP  VARCHAR2 255
private String Idcard;         //IDCARD  VARCHAR2 255
private String Mobile;         //MOBILE  VARCHAR2 255
private String Name;         //NAME  VARCHAR2 255
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.booked.ISchoolCarMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">TABLE_SCHOOL_CAR_INFO</sql>

<sql id="pk">ID</sql>

<sql id="colums">
ID,CLPP,COACHNO,DEPCODE,DEPNAME,GLBM,HMHP,IDCARD,MOBILE,NAME 
</sql>

<sql id="insertCols">
seq_school_car_info.nextval,
#{Clpp,jdbcType=VARCHAR,javaType=String},
#{Coachno,jdbcType=VARCHAR,javaType=String},
#{Depcode,jdbcType=VARCHAR,javaType=String},
#{Depname,jdbcType=VARCHAR,javaType=String},
#{Glbm,jdbcType=VARCHAR,javaType=String},
#{Hmhp,jdbcType=VARCHAR,javaType=String},
#{Idcard,jdbcType=VARCHAR,javaType=String},
#{Mobile,jdbcType=VARCHAR,javaType=String},
#{Name,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">ID=#{pk},</if>
CLPP=#{model.Clpp,jdbcType=VARCHAR,javaType=String},
COACHNO=#{model.Coachno,jdbcType=VARCHAR,javaType=String},
DEPCODE=#{model.Depcode,jdbcType=VARCHAR,javaType=String},
DEPNAME=#{model.Depname,jdbcType=VARCHAR,javaType=String},
GLBM=#{model.Glbm,jdbcType=VARCHAR,javaType=String},
HMHP=#{model.Hmhp,jdbcType=VARCHAR,javaType=String},
IDCARD=#{model.Idcard,jdbcType=VARCHAR,javaType=String},
MOBILE=#{model.Mobile,jdbcType=VARCHAR,javaType=String},
NAME=#{model.Name,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.DEPCODE,m.ID desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.booked.SchoolCarModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="INTEGER" javaType="Integer"/>
<result column="CLPP"  property="Clpp" jdbcType="VARCHAR" javaType="String"/>
<result column="COACHNO"  property="Coachno" jdbcType="VARCHAR" javaType="String"/>
<result column="DEPCODE"  property="Depcode" jdbcType="VARCHAR" javaType="String"/>
<result column="DEPNAME"  property="Depname" jdbcType="VARCHAR" javaType="String"/>
<result column="GLBM"  property="Glbm" jdbcType="VARCHAR" javaType="String"/>
<result column="HMHP"  property="Hmhp" jdbcType="VARCHAR" javaType="String"/>
<result column="IDCARD"  property="Idcard" jdbcType="VARCHAR" javaType="String"/>
<result column="MOBILE"  property="Mobile" jdbcType="VARCHAR" javaType="String"/>
<result column="NAME"  property="Name" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID = #{model.Id,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.Clpp neq null">and m.CLPP like #{model.Clpp,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Coachno neq null">and m.COACHNO like #{model.Coachno,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Depcode neq null">and m.DEPCODE like #{model.Depcode,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Depname neq null">and m.DEPNAME like #{model.Depname,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Glbm neq null">and m.GLBM like #{model.Glbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Hmhp neq null">and m.HMHP like #{model.Hmhp,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Idcard neq null">and m.IDCARD like #{model.Idcard,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Mobile neq null">and m.MOBILE like #{model.Mobile,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Name neq null">and m.NAME like #{model.Name,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=INTEGER,javaType=Integer}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=INTEGER,javaType=Integer}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.booked.SchoolCarModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=INTEGER,javaType=Integer}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>