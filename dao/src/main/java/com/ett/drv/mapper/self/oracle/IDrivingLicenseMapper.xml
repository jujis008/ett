<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-26 11:08:05
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.self.DrivingLicenseModel 


 public static enum F { 
  Xh,Dabh,Sfzmmc,Sfzmhm,Hmcd,Xm,Xb,Csrq,Gj,Djzsxzqh,Djzsxxdz,
Lxzsxzqh,Lxzsxxdz,Lxzsyzbm,Lxdh,Sjhm,Dzyx,Zzzm,Zzfzjg,Zzfzrq,Sfbd,
Zjcx,Yzjcx,Qfrq,Syrq,Cclzrq,Ccfzjg,Jzqx,Yxqs,Yxqz,Ljjf,
Cfrq,Xxtzrq,Bzcs,Zt,Ly,Jxmc,Jly,Xzqh,Xzqj,Fzrq,
Jbr,Glbm,Fzjg,Gxsj,Lsh,Xgzl,Bz,Jyw,Ydabh,Sqdm,
Zxbh  
 } 

private String Xh;         //XH  CHAR 15
private String Dabh;         //DABH  CHAR 12
private String Sfzmmc;         //SFZMMC  CHAR 1
private String Sfzmhm;         //SFZMHM  VARCHAR2 18
private String Hmcd;         //HMCD  CHAR 1
private String Xm;         //XM  VARCHAR2 30
private String Xb;         //XB  CHAR 5
private Date Csrq;         //CSRQ  DATE 0
private String Gj;         //GJ  CHAR 10
private String Djzsxzqh;         //DJZSXZQH  VARCHAR2 10
private String Djzsxxdz;         //DJZSXXDZ  VARCHAR2 128
private String Lxzsxzqh;         //LXZSXZQH  VARCHAR2 10
private String Lxzsxxdz;         //LXZSXXDZ  VARCHAR2 128
private String Lxzsyzbm;         //LXZSYZBM  VARCHAR2 6
private String Lxdh;         //LXDH  VARCHAR2 20
private String Sjhm;         //SJHM  VARCHAR2 20
private String Dzyx;         //DZYX  VARCHAR2 30
private String Zzzm;         //ZZZM  VARCHAR2 18
private String Zzfzjg;         //ZZFZJG  VARCHAR2 30
private Date Zzfzrq;         //ZZFZRQ  DATE 0
private String Sfbd;         //SFBD  CHAR 1
private String Zjcx;         //ZJCX  VARCHAR2 15
private String Yzjcx;         //YZJCX  VARCHAR2 30
private Date Qfrq;         //QFRQ  DATE 0
private Date Syrq;         //SYRQ  DATE 0
private Date Cclzrq;         //CCLZRQ  DATE 0
private String Ccfzjg;         //CCFZJG  VARCHAR2 10
private String Jzqx;         //JZQX  CHAR 1
private Date Yxqs;         //YXQS  DATE 0
private Date Yxqz;         //YXQZ  DATE 0
private Integer Ljjf;         //LJJF  NUMBER 3
private Date Cfrq;         //CFRQ  DATE 0
private Date Xxtzrq;         //XXTZRQ  DATE 0
private Integer Bzcs;         //BZCS  NUMBER 2
private String Zt;         //ZT  VARCHAR2 6
private String Ly;         //LY  CHAR 2
private String Jxmc;         //JXMC  VARCHAR2 64
private String Jly;         //JLY  VARCHAR2 30
private String Xzqh;         //XZQH  VARCHAR2 10
private String Xzqj;         //XZQJ  VARCHAR2 10
private Date Fzrq;         //FZRQ  DATE 0
private String Jbr;         //JBR  VARCHAR2 30
private String Glbm;         //GLBM  VARCHAR2 12
private String Fzjg;         //FZJG  VARCHAR2 10
private Date Gxsj;         //GXSJ  DATE 0
private String Lsh;         //LSH  CHAR 11
private String Xgzl;         //XGZL  VARCHAR2 15
private String Bz;         //BZ  VARCHAR2 256
private String Jyw;         //JYW  VARCHAR2 256
private String Ydabh;         //YDABH  CHAR 12
private String Sqdm;         //SQDM  VARCHAR2 12
private String Zxbh;         //ZXBH  CHAR 13
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.self.IDrivingLicenseMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">DRIVINGLICENSE</sql>

<sql id="pk">DABH</sql>

<sql id="colums">
XH,DABH,SFZMMC,SFZMHM,HMCD,XM,XB,CSRQ,GJ,DJZSXZQH,DJZSXXDZ,
LXZSXZQH,LXZSXXDZ,LXZSYZBM,LXDH,SJHM,DZYX,ZZZM,ZZFZJG,ZZFZRQ,SFBD,
ZJCX,YZJCX,QFRQ,SYRQ,CCLZRQ,CCFZJG,JZQX,YXQS,YXQZ,LJJF,
CFRQ,XXTZRQ,BZCS,ZT,LY,JXMC,JLY,XZQH,XZQJ,FZRQ,
JBR,GLBM,FZJG,GXSJ,LSH,XGZL,BZ,JYW,YDABH,SQDM,
ZXBH 
</sql>

<sql id="insertCols">
#{Xh,jdbcType=CHAR,javaType=String},
#{Dabh,jdbcType=CHAR,javaType=String},
#{Sfzmmc,jdbcType=CHAR,javaType=String},
#{Sfzmhm,jdbcType=VARCHAR,javaType=String},
#{Hmcd,jdbcType=CHAR,javaType=String},
#{Xm,jdbcType=VARCHAR,javaType=String},
#{Xb,jdbcType=CHAR,javaType=String},
#{Csrq,jdbcType=DATE,javaType=Date},
#{Gj,jdbcType=CHAR,javaType=String},
#{Djzsxzqh,jdbcType=VARCHAR,javaType=String},
#{Djzsxxdz,jdbcType=VARCHAR,javaType=String},
#{Lxzsxzqh,jdbcType=VARCHAR,javaType=String},
#{Lxzsxxdz,jdbcType=VARCHAR,javaType=String},
#{Lxzsyzbm,jdbcType=VARCHAR,javaType=String},
#{Lxdh,jdbcType=VARCHAR,javaType=String},
#{Sjhm,jdbcType=VARCHAR,javaType=String},
#{Dzyx,jdbcType=VARCHAR,javaType=String},
#{Zzzm,jdbcType=VARCHAR,javaType=String},
#{Zzfzjg,jdbcType=VARCHAR,javaType=String},
#{Zzfzrq,jdbcType=DATE,javaType=Date},
#{Sfbd,jdbcType=CHAR,javaType=String},
#{Zjcx,jdbcType=VARCHAR,javaType=String},
#{Yzjcx,jdbcType=VARCHAR,javaType=String},
#{Qfrq,jdbcType=DATE,javaType=Date},
#{Syrq,jdbcType=DATE,javaType=Date},
#{Cclzrq,jdbcType=DATE,javaType=Date},
#{Ccfzjg,jdbcType=VARCHAR,javaType=String},
#{Jzqx,jdbcType=CHAR,javaType=String},
#{Yxqs,jdbcType=DATE,javaType=Date},
#{Yxqz,jdbcType=DATE,javaType=Date},
#{Ljjf,jdbcType=INTEGER,javaType=Integer},
#{Cfrq,jdbcType=DATE,javaType=Date},
#{Xxtzrq,jdbcType=DATE,javaType=Date},
#{Bzcs,jdbcType=INTEGER,javaType=Integer},
#{Zt,jdbcType=VARCHAR,javaType=String},
#{Ly,jdbcType=CHAR,javaType=String},
#{Jxmc,jdbcType=VARCHAR,javaType=String},
#{Jly,jdbcType=VARCHAR,javaType=String},
#{Xzqh,jdbcType=VARCHAR,javaType=String},
#{Xzqj,jdbcType=VARCHAR,javaType=String},
#{Fzrq,jdbcType=DATE,javaType=Date},
#{Jbr,jdbcType=VARCHAR,javaType=String},
#{Glbm,jdbcType=VARCHAR,javaType=String},
#{Fzjg,jdbcType=VARCHAR,javaType=String},
#{Gxsj,jdbcType=DATE,javaType=Date},
#{Lsh,jdbcType=CHAR,javaType=String},
#{Xgzl,jdbcType=VARCHAR,javaType=String},
#{Bz,jdbcType=VARCHAR,javaType=String},
#{Jyw,jdbcType=VARCHAR,javaType=String},
#{Ydabh,jdbcType=CHAR,javaType=String},
#{Sqdm,jdbcType=VARCHAR,javaType=String},
#{Zxbh,jdbcType=CHAR,javaType=String},

</sql>

<sql id="updateCols">
XH=#{model.Xh,jdbcType=CHAR,javaType=String},
<if test="pk neq null">DABH=#{pk},</if>
SFZMMC=#{model.Sfzmmc,jdbcType=CHAR,javaType=String},
SFZMHM=#{model.Sfzmhm,jdbcType=VARCHAR,javaType=String},
HMCD=#{model.Hmcd,jdbcType=CHAR,javaType=String},
XM=#{model.Xm,jdbcType=VARCHAR,javaType=String},
XB=#{model.Xb,jdbcType=CHAR,javaType=String},
CSRQ=#{model.Csrq,jdbcType=DATE,javaType=Date},
GJ=#{model.Gj,jdbcType=CHAR,javaType=String},
DJZSXZQH=#{model.Djzsxzqh,jdbcType=VARCHAR,javaType=String},
DJZSXXDZ=#{model.Djzsxxdz,jdbcType=VARCHAR,javaType=String},
LXZSXZQH=#{model.Lxzsxzqh,jdbcType=VARCHAR,javaType=String},
LXZSXXDZ=#{model.Lxzsxxdz,jdbcType=VARCHAR,javaType=String},
LXZSYZBM=#{model.Lxzsyzbm,jdbcType=VARCHAR,javaType=String},
LXDH=#{model.Lxdh,jdbcType=VARCHAR,javaType=String},
SJHM=#{model.Sjhm,jdbcType=VARCHAR,javaType=String},
DZYX=#{model.Dzyx,jdbcType=VARCHAR,javaType=String},
ZZZM=#{model.Zzzm,jdbcType=VARCHAR,javaType=String},
ZZFZJG=#{model.Zzfzjg,jdbcType=VARCHAR,javaType=String},
ZZFZRQ=#{model.Zzfzrq,jdbcType=DATE,javaType=Date},
SFBD=#{model.Sfbd,jdbcType=CHAR,javaType=String},
ZJCX=#{model.Zjcx,jdbcType=VARCHAR,javaType=String},
YZJCX=#{model.Yzjcx,jdbcType=VARCHAR,javaType=String},
QFRQ=#{model.Qfrq,jdbcType=DATE,javaType=Date},
SYRQ=#{model.Syrq,jdbcType=DATE,javaType=Date},
CCLZRQ=#{model.Cclzrq,jdbcType=DATE,javaType=Date},
CCFZJG=#{model.Ccfzjg,jdbcType=VARCHAR,javaType=String},
JZQX=#{model.Jzqx,jdbcType=CHAR,javaType=String},
YXQS=#{model.Yxqs,jdbcType=DATE,javaType=Date},
YXQZ=#{model.Yxqz,jdbcType=DATE,javaType=Date},
LJJF=#{model.Ljjf,jdbcType=INTEGER,javaType=Integer},
CFRQ=#{model.Cfrq,jdbcType=DATE,javaType=Date},
XXTZRQ=#{model.Xxtzrq,jdbcType=DATE,javaType=Date},
BZCS=#{model.Bzcs,jdbcType=INTEGER,javaType=Integer},
ZT=#{model.Zt,jdbcType=VARCHAR,javaType=String},
LY=#{model.Ly,jdbcType=CHAR,javaType=String},
JXMC=#{model.Jxmc,jdbcType=VARCHAR,javaType=String},
JLY=#{model.Jly,jdbcType=VARCHAR,javaType=String},
XZQH=#{model.Xzqh,jdbcType=VARCHAR,javaType=String},
XZQJ=#{model.Xzqj,jdbcType=VARCHAR,javaType=String},
FZRQ=#{model.Fzrq,jdbcType=DATE,javaType=Date},
JBR=#{model.Jbr,jdbcType=VARCHAR,javaType=String},
GLBM=#{model.Glbm,jdbcType=VARCHAR,javaType=String},
FZJG=#{model.Fzjg,jdbcType=VARCHAR,javaType=String},
GXSJ=#{model.Gxsj,jdbcType=DATE,javaType=Date},
LSH=#{model.Lsh,jdbcType=CHAR,javaType=String},
XGZL=#{model.Xgzl,jdbcType=VARCHAR,javaType=String},
BZ=#{model.Bz,jdbcType=VARCHAR,javaType=String},
JYW=#{model.Jyw,jdbcType=VARCHAR,javaType=String},
YDABH=#{model.Ydabh,jdbcType=CHAR,javaType=String},
SQDM=#{model.Sqdm,jdbcType=VARCHAR,javaType=String},
ZXBH=#{model.Zxbh,jdbcType=CHAR,javaType=String},

</sql>

<sql id="orderby">order by m.DABH desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.self.DrivingLicenseModel" id="resultMap">
 <id column="DABH"  property="Dabh" jdbcType="CHAR" javaType="String"/>
<result column="XH"  property="Xh" jdbcType="CHAR" javaType="String"/>
<result column="SFZMMC"  property="Sfzmmc" jdbcType="CHAR" javaType="String"/>
<result column="SFZMHM"  property="Sfzmhm" jdbcType="VARCHAR" javaType="String"/>
<result column="HMCD"  property="Hmcd" jdbcType="CHAR" javaType="String"/>
<result column="XM"  property="Xm" jdbcType="VARCHAR" javaType="String"/>
<result column="XB"  property="Xb" jdbcType="CHAR" javaType="String"/>
<result column="CSRQ"  property="Csrq" jdbcType="DATE" javaType="Date"/>
<result column="GJ"  property="Gj" jdbcType="CHAR" javaType="String"/>
<result column="DJZSXZQH"  property="Djzsxzqh" jdbcType="VARCHAR" javaType="String"/>
<result column="DJZSXXDZ"  property="Djzsxxdz" jdbcType="VARCHAR" javaType="String"/>
<result column="LXZSXZQH"  property="Lxzsxzqh" jdbcType="VARCHAR" javaType="String"/>
<result column="LXZSXXDZ"  property="Lxzsxxdz" jdbcType="VARCHAR" javaType="String"/>
<result column="LXZSYZBM"  property="Lxzsyzbm" jdbcType="VARCHAR" javaType="String"/>
<result column="LXDH"  property="Lxdh" jdbcType="VARCHAR" javaType="String"/>
<result column="SJHM"  property="Sjhm" jdbcType="VARCHAR" javaType="String"/>
<result column="DZYX"  property="Dzyx" jdbcType="VARCHAR" javaType="String"/>
<result column="ZZZM"  property="Zzzm" jdbcType="VARCHAR" javaType="String"/>
<result column="ZZFZJG"  property="Zzfzjg" jdbcType="VARCHAR" javaType="String"/>
<result column="ZZFZRQ"  property="Zzfzrq" jdbcType="DATE" javaType="Date"/>
<result column="SFBD"  property="Sfbd" jdbcType="CHAR" javaType="String"/>
<result column="ZJCX"  property="Zjcx" jdbcType="VARCHAR" javaType="String"/>
<result column="YZJCX"  property="Yzjcx" jdbcType="VARCHAR" javaType="String"/>
<result column="QFRQ"  property="Qfrq" jdbcType="DATE" javaType="Date"/>
<result column="SYRQ"  property="Syrq" jdbcType="DATE" javaType="Date"/>
<result column="CCLZRQ"  property="Cclzrq" jdbcType="DATE" javaType="Date"/>
<result column="CCFZJG"  property="Ccfzjg" jdbcType="VARCHAR" javaType="String"/>
<result column="JZQX"  property="Jzqx" jdbcType="CHAR" javaType="String"/>
<result column="YXQS"  property="Yxqs" jdbcType="DATE" javaType="Date"/>
<result column="YXQZ"  property="Yxqz" jdbcType="DATE" javaType="Date"/>
<result column="LJJF"  property="Ljjf" jdbcType="INTEGER" javaType="Integer"/>
<result column="CFRQ"  property="Cfrq" jdbcType="DATE" javaType="Date"/>
<result column="XXTZRQ"  property="Xxtzrq" jdbcType="DATE" javaType="Date"/>
<result column="BZCS"  property="Bzcs" jdbcType="INTEGER" javaType="Integer"/>
<result column="ZT"  property="Zt" jdbcType="VARCHAR" javaType="String"/>
<result column="LY"  property="Ly" jdbcType="CHAR" javaType="String"/>
<result column="JXMC"  property="Jxmc" jdbcType="VARCHAR" javaType="String"/>
<result column="JLY"  property="Jly" jdbcType="VARCHAR" javaType="String"/>
<result column="XZQH"  property="Xzqh" jdbcType="VARCHAR" javaType="String"/>
<result column="XZQJ"  property="Xzqj" jdbcType="VARCHAR" javaType="String"/>
<result column="FZRQ"  property="Fzrq" jdbcType="DATE" javaType="Date"/>
<result column="JBR"  property="Jbr" jdbcType="VARCHAR" javaType="String"/>
<result column="GLBM"  property="Glbm" jdbcType="VARCHAR" javaType="String"/>
<result column="FZJG"  property="Fzjg" jdbcType="VARCHAR" javaType="String"/>
<result column="GXSJ"  property="Gxsj" jdbcType="DATE" javaType="Date"/>
<result column="LSH"  property="Lsh" jdbcType="CHAR" javaType="String"/>
<result column="XGZL"  property="Xgzl" jdbcType="VARCHAR" javaType="String"/>
<result column="BZ"  property="Bz" jdbcType="VARCHAR" javaType="String"/>
<result column="JYW"  property="Jyw" jdbcType="VARCHAR" javaType="String"/>
<result column="YDABH"  property="Ydabh" jdbcType="CHAR" javaType="String"/>
<result column="SQDM"  property="Sqdm" jdbcType="VARCHAR" javaType="String"/>
<result column="ZXBH"  property="Zxbh" jdbcType="CHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Xh neq null">and m.XH like #{model.Xh,jdbcType=CHAR javaType=String } </if> 
<if test="model.Dabh neq null">and m.DABH like #{model.Dabh,jdbcType=CHAR javaType=String } </if> 
<if test="model.Sfzmmc neq null">and m.SFZMMC like #{model.Sfzmmc,jdbcType=CHAR javaType=String } </if> 
<if test="model.Sfzmhm neq null">and m.SFZMHM like #{model.Sfzmhm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Hmcd neq null">and m.HMCD like #{model.Hmcd,jdbcType=CHAR javaType=String } </if> 
<if test="model.Xm neq null">and m.XM like #{model.Xm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xb neq null">and m.XB like #{model.Xb,jdbcType=CHAR javaType=String } </if> 
<if test="model.Csrq neq null">and to_char(m.CSRQ,'YYYY-MM-DD') = to_char(#{model.Csrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Gj neq null">and m.GJ like #{model.Gj,jdbcType=CHAR javaType=String } </if> 
<if test="model.Djzsxzqh neq null">and m.DJZSXZQH like #{model.Djzsxzqh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Djzsxxdz neq null">and m.DJZSXXDZ like #{model.Djzsxxdz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Lxzsxzqh neq null">and m.LXZSXZQH like #{model.Lxzsxzqh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Lxzsxxdz neq null">and m.LXZSXXDZ like #{model.Lxzsxxdz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Lxzsyzbm neq null">and m.LXZSYZBM like #{model.Lxzsyzbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Lxdh neq null">and m.LXDH like #{model.Lxdh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Sjhm neq null">and m.SJHM like #{model.Sjhm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Dzyx neq null">and m.DZYX like #{model.Dzyx,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Zzzm neq null">and m.ZZZM like #{model.Zzzm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Zzfzjg neq null">and m.ZZFZJG like #{model.Zzfzjg,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Zzfzrq neq null">and to_char(m.ZZFZRQ,'YYYY-MM-DD') = to_char(#{model.Zzfzrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Sfbd neq null">and m.SFBD like #{model.Sfbd,jdbcType=CHAR javaType=String } </if> 
<if test="model.Zjcx neq null">and m.ZJCX like #{model.Zjcx,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Yzjcx neq null">and m.YZJCX like #{model.Yzjcx,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Qfrq neq null">and to_char(m.QFRQ,'YYYY-MM-DD') = to_char(#{model.Qfrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Syrq neq null">and to_char(m.SYRQ,'YYYY-MM-DD') = to_char(#{model.Syrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Cclzrq neq null">and to_char(m.CCLZRQ,'YYYY-MM-DD') = to_char(#{model.Cclzrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Ccfzjg neq null">and m.CCFZJG like #{model.Ccfzjg,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Jzqx neq null">and m.JZQX like #{model.Jzqx,jdbcType=CHAR javaType=String } </if> 
<if test="model.Yxqs neq null">and to_char(m.YXQS,'YYYY-MM-DD') = to_char(#{model.Yxqs,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Yxqz neq null">and to_char(m.YXQZ,'YYYY-MM-DD') = to_char(#{model.Yxqz,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Ljjf neq null">and m.LJJF = #{model.Ljjf,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.Cfrq neq null">and to_char(m.CFRQ,'YYYY-MM-DD') = to_char(#{model.Cfrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Xxtzrq neq null">and to_char(m.XXTZRQ,'YYYY-MM-DD') = to_char(#{model.Xxtzrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Bzcs neq null">and m.BZCS = #{model.Bzcs,jdbcType=INTEGER javaType=Integer } </if> 
<if test="model.Zt neq null">and m.ZT like #{model.Zt,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ly neq null">and m.LY like #{model.Ly,jdbcType=CHAR javaType=String } </if> 
<if test="model.Jxmc neq null">and m.JXMC like #{model.Jxmc,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Jly neq null">and m.JLY like #{model.Jly,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xzqh neq null">and m.XZQH like #{model.Xzqh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xzqj neq null">and m.XZQJ like #{model.Xzqj,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Fzrq neq null">and to_char(m.FZRQ,'YYYY-MM-DD') = to_char(#{model.Fzrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Jbr neq null">and m.JBR like #{model.Jbr,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Glbm neq null">and m.GLBM like #{model.Glbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Fzjg neq null">and m.FZJG like #{model.Fzjg,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Gxsj neq null">and to_char(m.GXSJ,'YYYY-MM-DD') = to_char(#{model.Gxsj,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Lsh neq null">and m.LSH like #{model.Lsh,jdbcType=CHAR javaType=String } </if> 
<if test="model.Xgzl neq null">and m.XGZL like #{model.Xgzl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Bz neq null">and m.BZ like #{model.Bz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Jyw neq null">and m.JYW like #{model.Jyw,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ydabh neq null">and m.YDABH like #{model.Ydabh,jdbcType=CHAR javaType=String } </if> 
<if test="model.Sqdm neq null">and m.SQDM like #{model.Sqdm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Zxbh neq null">and m.ZXBH like #{model.Zxbh,jdbcType=CHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Dabh,jdbcType=CHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Dabh,jdbcType=CHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Dabh,jdbcType=CHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.self.DrivingLicenseModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Dabh,jdbcType=CHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>