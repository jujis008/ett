<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-26 11:08:05
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.self.DrvFlowModel 


 public static enum F { 
  Lsh,Sfzmhm,Dabh,Xm,Ywlx,Ywyy,Kssj,Jssj,Ywgw,Kskm,Xygw,
Glbm,Ffbz,Rkbz,Hdbz,Xgzl,Zjcx  
 } 

private String Lsh;         //LSH  VARCHAR2 32
private String Sfzmhm;         //SFZMHM  VARCHAR2 18
private String Dabh;         //DABH  VARCHAR2 32
private String Xm;         //XM  VARCHAR2 32
private String Ywlx;         //YWLX  VARCHAR2 32
private String Ywyy;         //YWYY  VARCHAR2 32
private Date Kssj;         //KSSJ  DATE 0
private Date Jssj;         //JSSJ  DATE 0
private String Ywgw;         //YWGW  VARCHAR2 32
private String Kskm;         //KSKM  VARCHAR2 32
private String Xygw;         //XYGW  VARCHAR2 32
private String Glbm;         //GLBM  VARCHAR2 32
private String Ffbz;         //FFBZ  VARCHAR2 32
private String Rkbz;         //RKBZ  VARCHAR2 32
private String Hdbz;         //HDBZ  VARCHAR2 32
private String Xgzl;         //XGZL  VARCHAR2 32
private String Zjcx;         //ZJCX  VARCHAR2 32
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.self.IDrvFlowMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">DRV_FLOW</sql>

<sql id="pk">LSH</sql>

<sql id="colums">
LSH,SFZMHM,DABH,XM,YWLX,YWYY,KSSJ,JSSJ,YWGW,KSKM,XYGW,
GLBM,FFBZ,RKBZ,HDBZ,XGZL,ZJCX 
</sql>

<sql id="insertCols">
#{Lsh,jdbcType=VARCHAR,javaType=String},
#{Sfzmhm,jdbcType=VARCHAR,javaType=String},
#{Dabh,jdbcType=VARCHAR,javaType=String},
#{Xm,jdbcType=VARCHAR,javaType=String},
#{Ywlx,jdbcType=VARCHAR,javaType=String},
#{Ywyy,jdbcType=VARCHAR,javaType=String},
#{Kssj,jdbcType=DATE,javaType=Date},
#{Jssj,jdbcType=DATE,javaType=Date},
#{Ywgw,jdbcType=VARCHAR,javaType=String},
#{Kskm,jdbcType=VARCHAR,javaType=String},
#{Xygw,jdbcType=VARCHAR,javaType=String},
#{Glbm,jdbcType=VARCHAR,javaType=String},
#{Ffbz,jdbcType=VARCHAR,javaType=String},
#{Rkbz,jdbcType=VARCHAR,javaType=String},
#{Hdbz,jdbcType=VARCHAR,javaType=String},
#{Xgzl,jdbcType=VARCHAR,javaType=String},
#{Zjcx,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">LSH=#{pk},</if>
SFZMHM=#{model.Sfzmhm,jdbcType=VARCHAR,javaType=String},
DABH=#{model.Dabh,jdbcType=VARCHAR,javaType=String},
XM=#{model.Xm,jdbcType=VARCHAR,javaType=String},
YWLX=#{model.Ywlx,jdbcType=VARCHAR,javaType=String},
YWYY=#{model.Ywyy,jdbcType=VARCHAR,javaType=String},
KSSJ=#{model.Kssj,jdbcType=DATE,javaType=Date},
JSSJ=#{model.Jssj,jdbcType=DATE,javaType=Date},
YWGW=#{model.Ywgw,jdbcType=VARCHAR,javaType=String},
KSKM=#{model.Kskm,jdbcType=VARCHAR,javaType=String},
XYGW=#{model.Xygw,jdbcType=VARCHAR,javaType=String},
GLBM=#{model.Glbm,jdbcType=VARCHAR,javaType=String},
FFBZ=#{model.Ffbz,jdbcType=VARCHAR,javaType=String},
RKBZ=#{model.Rkbz,jdbcType=VARCHAR,javaType=String},
HDBZ=#{model.Hdbz,jdbcType=VARCHAR,javaType=String},
XGZL=#{model.Xgzl,jdbcType=VARCHAR,javaType=String},
ZJCX=#{model.Zjcx,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.LSH desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.self.DrvFlowModel" id="resultMap">
 <id column="LSH"  property="Lsh" jdbcType="VARCHAR" javaType="String"/>
<result column="SFZMHM"  property="Sfzmhm" jdbcType="VARCHAR" javaType="String"/>
<result column="DABH"  property="Dabh" jdbcType="VARCHAR" javaType="String"/>
<result column="XM"  property="Xm" jdbcType="VARCHAR" javaType="String"/>
<result column="YWLX"  property="Ywlx" jdbcType="VARCHAR" javaType="String"/>
<result column="YWYY"  property="Ywyy" jdbcType="VARCHAR" javaType="String"/>
<result column="KSSJ"  property="Kssj" jdbcType="DATE" javaType="Date"/>
<result column="JSSJ"  property="Jssj" jdbcType="DATE" javaType="Date"/>
<result column="YWGW"  property="Ywgw" jdbcType="VARCHAR" javaType="String"/>
<result column="KSKM"  property="Kskm" jdbcType="VARCHAR" javaType="String"/>
<result column="XYGW"  property="Xygw" jdbcType="VARCHAR" javaType="String"/>
<result column="GLBM"  property="Glbm" jdbcType="VARCHAR" javaType="String"/>
<result column="FFBZ"  property="Ffbz" jdbcType="VARCHAR" javaType="String"/>
<result column="RKBZ"  property="Rkbz" jdbcType="VARCHAR" javaType="String"/>
<result column="HDBZ"  property="Hdbz" jdbcType="VARCHAR" javaType="String"/>
<result column="XGZL"  property="Xgzl" jdbcType="VARCHAR" javaType="String"/>
<result column="ZJCX"  property="Zjcx" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Lsh neq null">and m.LSH like #{model.Lsh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Sfzmhm neq null">and m.SFZMHM like #{model.Sfzmhm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Dabh neq null">and m.DABH like #{model.Dabh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xm neq null">and m.XM like #{model.Xm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ywlx neq null">and m.YWLX like #{model.Ywlx,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ywyy neq null">and m.YWYY like #{model.Ywyy,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Kssj neq null">and to_char(m.KSSJ,'YYYY-MM-DD') = to_char(#{model.Kssj,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Jssj neq null">and to_char(m.JSSJ,'YYYY-MM-DD') = to_char(#{model.Jssj,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Ywgw neq null">and m.YWGW like #{model.Ywgw,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Kskm neq null">and m.KSKM like #{model.Kskm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xygw neq null">and m.XYGW like #{model.Xygw,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Glbm neq null">and m.GLBM like #{model.Glbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ffbz neq null">and m.FFBZ like #{model.Ffbz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Rkbz neq null">and m.RKBZ like #{model.Rkbz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Hdbz neq null">and m.HDBZ like #{model.Hdbz,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xgzl neq null">and m.XGZL like #{model.Xgzl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Zjcx neq null">and m.ZJCX like #{model.Zjcx,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Lsh,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Lsh,jdbcType=VARCHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Lsh,jdbcType=VARCHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.self.DrvFlowModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Lsh,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>