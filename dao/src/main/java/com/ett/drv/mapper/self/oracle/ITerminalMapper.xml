<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-24 02:10:51
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.self.TerminalModel 


 public static enum F { 
  Id,Glbm,Fzjg,Name,Catalog,Mac1,Mac2,Ip1,Ip2,Address,YlwgUrl,
YlwgTimout,DriverUrl,DriverTimeout,CarUrl,CarTimeout,VioUrl,VioTimeout,Descp  
 } 

private Double Id;         //ID  NUMBER 5
private String Glbm;         //GLBM  VARCHAR2 100
private String Fzjg;         //FZJG  VARCHAR2 100
private String Name;         //NAME  VARCHAR2 100
private String Catalog;         //CATALOG  VARCHAR2 100
private String Mac1;         //MAC1  VARCHAR2 100
private String Mac2;         //MAC2  VARCHAR2 100
private String Ip1;         //IP1  VARCHAR2 100
private String Ip2;         //IP2  VARCHAR2 100
private String Address;         //ADDRESS  VARCHAR2 150
private String YlwgUrl;         //YLWG_URL  VARCHAR2 50
private Double YlwgTimout;         //YLWG_TIMOUT  NUMBER 5
private String DriverUrl;         //DRIVER_URL  VARCHAR2 150
private Double DriverTimeout;         //DRIVER_TIMEOUT  NUMBER 5
private String CarUrl;         //CAR_URL  VARCHAR2 150
private Double CarTimeout;         //CAR_TIMEOUT  NUMBER 5
private String VioUrl;         //VIO_URL  VARCHAR2 150
private Double VioTimeout;         //VIO_TIMEOUT  NUMBER 5
private String Descp;         //DESCP  VARCHAR2 150
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.self.ITerminalMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">SELF_SYS_TERMINAL</sql>

<sql id="pk">ID</sql>

<sql id="colums">
ID,GLBM,FZJG,NAME,CATALOG,MAC1,MAC2,IP1,IP2,ADDRESS,YLWG_URL,
YLWG_TIMOUT,DRIVER_URL,DRIVER_TIMEOUT,CAR_URL,CAR_TIMEOUT,VIO_URL,VIO_TIMEOUT,DESCP 
</sql>

<sql id="insertCols">
#{Id,jdbcType=FLOAT,javaType=Double},
#{Glbm,jdbcType=VARCHAR,javaType=String},
#{Fzjg,jdbcType=VARCHAR,javaType=String},
#{Name,jdbcType=VARCHAR,javaType=String},
#{Catalog,jdbcType=VARCHAR,javaType=String},
#{Mac1,jdbcType=VARCHAR,javaType=String},
#{Mac2,jdbcType=VARCHAR,javaType=String},
#{Ip1,jdbcType=VARCHAR,javaType=String},
#{Ip2,jdbcType=VARCHAR,javaType=String},
#{Address,jdbcType=VARCHAR,javaType=String},
#{YlwgUrl,jdbcType=VARCHAR,javaType=String},
#{YlwgTimout,jdbcType=FLOAT,javaType=Double},
#{DriverUrl,jdbcType=VARCHAR,javaType=String},
#{DriverTimeout,jdbcType=FLOAT,javaType=Double},
#{CarUrl,jdbcType=VARCHAR,javaType=String},
#{CarTimeout,jdbcType=FLOAT,javaType=Double},
#{VioUrl,jdbcType=VARCHAR,javaType=String},
#{VioTimeout,jdbcType=FLOAT,javaType=Double},
#{Descp,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">ID=#{pk}</if>,
GLBM=#{model.Glbm,jdbcType=VARCHAR,javaType=String},
FZJG=#{model.Fzjg,jdbcType=VARCHAR,javaType=String},
NAME=#{model.Name,jdbcType=VARCHAR,javaType=String},
CATALOG=#{model.Catalog,jdbcType=VARCHAR,javaType=String},
MAC1=#{model.Mac1,jdbcType=VARCHAR,javaType=String},
MAC2=#{model.Mac2,jdbcType=VARCHAR,javaType=String},
IP1=#{model.Ip1,jdbcType=VARCHAR,javaType=String},
IP2=#{model.Ip2,jdbcType=VARCHAR,javaType=String},
ADDRESS=#{model.Address,jdbcType=VARCHAR,javaType=String},
YLWG_URL=#{model.YlwgUrl,jdbcType=VARCHAR,javaType=String},
YLWG_TIMOUT=#{model.YlwgTimout,jdbcType=FLOAT,javaType=Double},
DRIVER_URL=#{model.DriverUrl,jdbcType=VARCHAR,javaType=String},
DRIVER_TIMEOUT=#{model.DriverTimeout,jdbcType=FLOAT,javaType=Double},
CAR_URL=#{model.CarUrl,jdbcType=VARCHAR,javaType=String},
CAR_TIMEOUT=#{model.CarTimeout,jdbcType=FLOAT,javaType=Double},
VIO_URL=#{model.VioUrl,jdbcType=VARCHAR,javaType=String},
VIO_TIMEOUT=#{model.VioTimeout,jdbcType=FLOAT,javaType=Double},
DESCP=#{model.Descp,jdbcType=VARCHAR,javaType=String},

</sql>

<sql id="orderby">order by m.ID desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.self.TerminalModel" id="resultMap">
 <id column="ID"  property="Id" jdbcType="FLOAT" javaType="Double"/>
<result column="GLBM"  property="Glbm" jdbcType="VARCHAR" javaType="String"/>
<result column="FZJG"  property="Fzjg" jdbcType="VARCHAR" javaType="String"/>
<result column="NAME"  property="Name" jdbcType="VARCHAR" javaType="String"/>
<result column="CATALOG"  property="Catalog" jdbcType="VARCHAR" javaType="String"/>
<result column="MAC1"  property="Mac1" jdbcType="VARCHAR" javaType="String"/>
<result column="MAC2"  property="Mac2" jdbcType="VARCHAR" javaType="String"/>
<result column="IP1"  property="Ip1" jdbcType="VARCHAR" javaType="String"/>
<result column="IP2"  property="Ip2" jdbcType="VARCHAR" javaType="String"/>
<result column="ADDRESS"  property="Address" jdbcType="VARCHAR" javaType="String"/>
<result column="YLWG_URL"  property="YlwgUrl" jdbcType="VARCHAR" javaType="String"/>
<result column="YLWG_TIMOUT"  property="YlwgTimout" jdbcType="FLOAT" javaType="Double"/>
<result column="DRIVER_URL"  property="DriverUrl" jdbcType="VARCHAR" javaType="String"/>
<result column="DRIVER_TIMEOUT"  property="DriverTimeout" jdbcType="FLOAT" javaType="Double"/>
<result column="CAR_URL"  property="CarUrl" jdbcType="VARCHAR" javaType="String"/>
<result column="CAR_TIMEOUT"  property="CarTimeout" jdbcType="FLOAT" javaType="Double"/>
<result column="VIO_URL"  property="VioUrl" jdbcType="VARCHAR" javaType="String"/>
<result column="VIO_TIMEOUT"  property="VioTimeout" jdbcType="FLOAT" javaType="Double"/>
<result column="DESCP"  property="Descp" jdbcType="VARCHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Id neq null">and m.ID = #{model.Id,jdbcType=FLOAT javaType=Double } </if> 
<if test="model.Glbm neq null">and m.GLBM = #{model.Glbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Fzjg neq null">and m.FZJG = #{model.Fzjg,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Name neq null">and m.NAME = #{model.Name,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Catalog neq null">and m.CATALOG = #{model.Catalog,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Mac1 neq null">and m.MAC1 = #{model.Mac1,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Mac2 neq null">and m.MAC2 = #{model.Mac2,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ip1 neq null">and m.IP1 = #{model.Ip1,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Ip2 neq null">and m.IP2 = #{model.Ip2,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Address neq null">and m.ADDRESS = #{model.Address,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.YlwgUrl neq null">and m.YLWG_URL = #{model.YlwgUrl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.YlwgTimout neq null">and m.YLWG_TIMOUT = #{model.YlwgTimout,jdbcType=FLOAT javaType=Double } </if> 
<if test="model.DriverUrl neq null">and m.DRIVER_URL = #{model.DriverUrl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.DriverTimeout neq null">and m.DRIVER_TIMEOUT = #{model.DriverTimeout,jdbcType=FLOAT javaType=Double } </if> 
<if test="model.CarUrl neq null">and m.CAR_URL = #{model.CarUrl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.CarTimeout neq null">and m.CAR_TIMEOUT = #{model.CarTimeout,jdbcType=FLOAT javaType=Double } </if> 
<if test="model.VioUrl neq null">and m.VIO_URL = #{model.VioUrl,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.VioTimeout neq null">and m.VIO_TIMEOUT = #{model.VioTimeout,jdbcType=FLOAT javaType=Double } </if> 
<if test="model.Descp neq null">and m.DESCP = #{model.Descp,jdbcType=VARCHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Id,jdbcType=FLOAT,javaType=Double}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Id,jdbcType=FLOAT,javaType=Double}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Id,jdbcType=FLOAT,javaType=Double}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.self.TerminalModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Id,jdbcType=FLOAT,javaType=Double}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>