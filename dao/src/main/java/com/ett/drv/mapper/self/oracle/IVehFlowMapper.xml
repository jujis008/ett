<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Create Date:2011-05-25 05:18:51
	MapperTemplate:com.smartken.kia.core.plugin.mybatis.OracleMapperTemplate
	Model:com.ett.drv.model.self.VehFlowModel 


 public static enum F { 
  Lsh,Xh,Ywlx,Ywyy,Syr,Clsbdh,Hpzl,Hphm,Clpp1,Clxh,Cllx,
Xzqh,Sqrq,Bjrq,Xygw,Ywlc,Lszt,Glbm,Fpbj,Ffbj,Rkbj  
 } 

private String Lsh;         //LSH  VARCHAR2 32
private String Xh;         //XH  CHAR 14
private String Ywlx;         //YWLX  CHAR 1
private String Ywyy;         //YWYY  VARCHAR2 8
private String Syr;         //SYR  VARCHAR2 64
private String Clsbdh;         //CLSBDH  VARCHAR2 25
private String Hpzl;         //HPZL  CHAR 2
private String Hphm;         //HPHM  VARCHAR2 15
private String Clpp1;         //CLPP1  VARCHAR2 32
private String Clxh;         //CLXH  VARCHAR2 32
private String Cllx;         //CLLX  CHAR 3
private String Xzqh;         //XZQH  VARCHAR2 10
private Date Sqrq;         //SQRQ  DATE 0
private Date Bjrq;         //BJRQ  DATE 0
private String Xygw;         //XYGW  CHAR 1
private String Ywlc;         //YWLC  VARCHAR2 10
private String Lszt;         //LSZT  CHAR 1
private String Glbm;         //GLBM  VARCHAR2 10
private String Fpbj;         //FPBJ  CHAR 1
private String Ffbj;         //FFBJ  CHAR 1
private String Rkbj;         //RKBJ  CHAR 1
 -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ett.drv.mapper.self.IVehFlowMapper">

<cache flushInterval="30000" readOnly="true"></cache>


<sql id="table">VEH_FLOW</sql>

<sql id="pk">LSH</sql>

<sql id="colums">
LSH,XH,YWLX,YWYY,SYR,CLSBDH,HPZL,HPHM,CLPP1,CLXH,CLLX,
XZQH,SQRQ,BJRQ,XYGW,YWLC,LSZT,GLBM,FPBJ,FFBJ,RKBJ 
</sql>

<sql id="insertCols">
#{Lsh,jdbcType=VARCHAR,javaType=String},
#{Xh,jdbcType=CHAR,javaType=String},
#{Ywlx,jdbcType=CHAR,javaType=String},
#{Ywyy,jdbcType=VARCHAR,javaType=String},
#{Syr,jdbcType=VARCHAR,javaType=String},
#{Clsbdh,jdbcType=VARCHAR,javaType=String},
#{Hpzl,jdbcType=CHAR,javaType=String},
#{Hphm,jdbcType=VARCHAR,javaType=String},
#{Clpp1,jdbcType=VARCHAR,javaType=String},
#{Clxh,jdbcType=VARCHAR,javaType=String},
#{Cllx,jdbcType=CHAR,javaType=String},
#{Xzqh,jdbcType=VARCHAR,javaType=String},
#{Sqrq,jdbcType=DATE,javaType=Date},
#{Bjrq,jdbcType=DATE,javaType=Date},
#{Xygw,jdbcType=CHAR,javaType=String},
#{Ywlc,jdbcType=VARCHAR,javaType=String},
#{Lszt,jdbcType=CHAR,javaType=String},
#{Glbm,jdbcType=VARCHAR,javaType=String},
#{Fpbj,jdbcType=CHAR,javaType=String},
#{Ffbj,jdbcType=CHAR,javaType=String},
#{Rkbj,jdbcType=CHAR,javaType=String},

</sql>

<sql id="updateCols">
<if test="pk neq null">LSH=#{pk}</if>,
XH=#{Xh,jdbcType=CHAR,javaType=String},
YWLX=#{Ywlx,jdbcType=CHAR,javaType=String},
YWYY=#{Ywyy,jdbcType=VARCHAR,javaType=String},
SYR=#{Syr,jdbcType=VARCHAR,javaType=String},
CLSBDH=#{Clsbdh,jdbcType=VARCHAR,javaType=String},
HPZL=#{Hpzl,jdbcType=CHAR,javaType=String},
HPHM=#{Hphm,jdbcType=VARCHAR,javaType=String},
CLPP1=#{Clpp1,jdbcType=VARCHAR,javaType=String},
CLXH=#{Clxh,jdbcType=VARCHAR,javaType=String},
CLLX=#{Cllx,jdbcType=CHAR,javaType=String},
XZQH=#{Xzqh,jdbcType=VARCHAR,javaType=String},
SQRQ=#{Sqrq,jdbcType=DATE,javaType=Date},
BJRQ=#{Bjrq,jdbcType=DATE,javaType=Date},
XYGW=#{Xygw,jdbcType=CHAR,javaType=String},
YWLC=#{Ywlc,jdbcType=VARCHAR,javaType=String},
LSZT=#{Lszt,jdbcType=CHAR,javaType=String},
GLBM=#{Glbm,jdbcType=VARCHAR,javaType=String},
FPBJ=#{Fpbj,jdbcType=CHAR,javaType=String},
FFBJ=#{Ffbj,jdbcType=CHAR,javaType=String},
RKBJ=#{Rkbj,jdbcType=CHAR,javaType=String},

</sql>

<sql id="orderby">order by m.LSH desc </sql>

<sql id="joinColums"></sql>

<sql id="join"></sql><!-- 别名m已被主表使用  -->

<resultMap type="com.ett.drv.model.self.VehFlowModel" id="resultMap">
 <id column="LSH"  property="Lsh" jdbcType="VARCHAR" javaType="String"/>
<result column="XH"  property="Xh" jdbcType="CHAR" javaType="String"/>
<result column="YWLX"  property="Ywlx" jdbcType="CHAR" javaType="String"/>
<result column="YWYY"  property="Ywyy" jdbcType="VARCHAR" javaType="String"/>
<result column="SYR"  property="Syr" jdbcType="VARCHAR" javaType="String"/>
<result column="CLSBDH"  property="Clsbdh" jdbcType="VARCHAR" javaType="String"/>
<result column="HPZL"  property="Hpzl" jdbcType="CHAR" javaType="String"/>
<result column="HPHM"  property="Hphm" jdbcType="VARCHAR" javaType="String"/>
<result column="CLPP1"  property="Clpp1" jdbcType="VARCHAR" javaType="String"/>
<result column="CLXH"  property="Clxh" jdbcType="VARCHAR" javaType="String"/>
<result column="CLLX"  property="Cllx" jdbcType="CHAR" javaType="String"/>
<result column="XZQH"  property="Xzqh" jdbcType="VARCHAR" javaType="String"/>
<result column="SQRQ"  property="Sqrq" jdbcType="DATE" javaType="Date"/>
<result column="BJRQ"  property="Bjrq" jdbcType="DATE" javaType="Date"/>
<result column="XYGW"  property="Xygw" jdbcType="CHAR" javaType="String"/>
<result column="YWLC"  property="Ywlc" jdbcType="VARCHAR" javaType="String"/>
<result column="LSZT"  property="Lszt" jdbcType="CHAR" javaType="String"/>
<result column="GLBM"  property="Glbm" jdbcType="VARCHAR" javaType="String"/>
<result column="FPBJ"  property="Fpbj" jdbcType="CHAR" javaType="String"/>
<result column="FFBJ"  property="Ffbj" jdbcType="CHAR" javaType="String"/>
<result column="RKBJ"  property="Rkbj" jdbcType="CHAR" javaType="String"/>

 </resultMap>


<sql id="selectCondition">
<if test="model.Lsh neq null">and m.LSH like #{model.Lsh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Xh neq null">and m.XH like #{model.Xh,jdbcType=CHAR javaType=String } </if> 
<if test="model.Ywlx neq null">and m.YWLX like #{model.Ywlx,jdbcType=CHAR javaType=String } </if> 
<if test="model.Ywyy neq null">and m.YWYY like #{model.Ywyy,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Syr neq null">and m.SYR like #{model.Syr,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Clsbdh neq null">and m.CLSBDH like #{model.Clsbdh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Hpzl neq null">and m.HPZL like #{model.Hpzl,jdbcType=CHAR javaType=String } </if> 
<if test="model.Hphm neq null">and m.HPHM like #{model.Hphm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Clpp1 neq null">and m.CLPP1 like #{model.Clpp1,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Clxh neq null">and m.CLXH like #{model.Clxh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Cllx neq null">and m.CLLX like #{model.Cllx,jdbcType=CHAR javaType=String } </if> 
<if test="model.Xzqh neq null">and m.XZQH like #{model.Xzqh,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Sqrq neq null">and to_char(m.SQRQ,'YYYY-MM-DD') = to_char(#{model.Sqrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Bjrq neq null">and to_char(m.BJRQ,'YYYY-MM-DD') = to_char(#{model.Bjrq,jdbcType=DATE javaType=Date },'YYYY-MM-DD') </if> 
<if test="model.Xygw neq null">and m.XYGW like #{model.Xygw,jdbcType=CHAR javaType=String } </if> 
<if test="model.Ywlc neq null">and m.YWLC like #{model.Ywlc,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Lszt neq null">and m.LSZT like #{model.Lszt,jdbcType=CHAR javaType=String } </if> 
<if test="model.Glbm neq null">and m.GLBM like #{model.Glbm,jdbcType=VARCHAR javaType=String } </if> 
<if test="model.Fpbj neq null">and m.FPBJ like #{model.Fpbj,jdbcType=CHAR javaType=String } </if> 
<if test="model.Ffbj neq null">and m.FFBJ like #{model.Ffbj,jdbcType=CHAR javaType=String } </if> 
<if test="model.Rkbj neq null">and m.RKBJ like #{model.Rkbj,jdbcType=CHAR javaType=String } </if> 

</sql>


<select id="select" resultType="ArrayList" resultMap="resultMap">
	select m.* from <include refid="table" /> m   
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectCondition"/>
		</trim>
	<include refid="orderby"/>
</select>

<select id="selectUnion" resultType="ArrayList" resultMap="resultMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* from <include refid="table" /> m 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
   ) m <include refid="orderby"/>
</select>

<select id="selectEqPk"  resultMap="resultMap">
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> = #{Lsh,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectNotInPk" resultType="ArrayList" resultMap="resultMap" >
	select m.* from <include refid="table" /> m  where m.<include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectAll"  resultType="ArrayList"  resultMap="resultMap">
	select m.* from  <include refid="table" /> m
	<include refid="orderby"/>
</select>

<select id="count" resultType="int">
	select count(*) from <include refid="table"/>
</select>

<insert id="insertOne" flushCache="true" >
	insert into <include refid="table"/> ( <include refid="colums"/> ) values  
	(
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="insertCols"/>
		</trim>
	)
</insert>

<update id="updateOne" flushCache="true" >
	update <include refid="table"/> set 
		<trim  prefixOverrides="," suffixOverrides=",">
			<include refid="updateCols"/>
		</trim>
	where <include refid="pk" />=#{model.Lsh,jdbcType=VARCHAR,javaType=String}</update>

<delete id="deleteEqPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> =#{Lsh,jdbcType=VARCHAR,javaType=String}
</delete>

<delete id="deleteInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>

<delete id="deleteNotInPk" flushCache="true">
	delete from <include refid="table"/> where <include refid="pk" /> not in
		<foreach item="pk" collection="list" open="(" separator="," close=")">#{pk}</foreach>
</delete>



<resultMap type="com.ett.drv.model.self.VehFlowModel" id="viewMap" extends="resultMap" ></resultMap>


<sql id="selectViewCondition">
	 <include refid="selectCondition"/>  
</sql><select id="selectView" resultType="ArrayList" resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
		<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
			<include refid="selectViewCondition"/>
		</trim>	<include refid="orderby"/>
</select>

<select id="selectViewUnion" resultType="ArrayList" resultMap="viewMap">
  select m.* from (
	<trim  prefixOverrides="union" suffixOverrides="union">
		<foreach collection="list" item="model">
			<if test="model neq null">
				union select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> 
					<trim prefix="where 1=2 or (" suffix=")" prefixOverrides="and|or" suffixOverrides="and|or">
						<include refid="selectViewCondition"/>
					</trim>
			</if>
		</foreach>
	</trim>
  ) m <include refid="orderby"/>
</select>

<select id="selectViewEqPk"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> = #{Lsh,jdbcType=VARCHAR,javaType=String}
</select>

<select id="selectViewInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select id="selectViewNotInPk" resultType="ArrayList" resultMap="viewMap" >
	select m.* <include refid="joinColums"/> from <include refid="table" /> m <include refid="join"/> where m.<include refid="pk" /> not in
	<foreach item="pk" collection="list" open="(" separator="," close=")"> #{pk} </foreach>
	<include refid="orderby"/>
</select>

<select  id="selectViewAll"  resultType="ArrayList"  resultMap="viewMap">
	select m.* <include refid="joinColums"/> from  <include refid="table" /> m <include refid="join"/>
	<include refid="orderby"/>
</select>

</mapper>