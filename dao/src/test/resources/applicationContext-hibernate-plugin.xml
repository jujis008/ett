<?xml version="1.0" encoding="UTF-8"?>
<!--t 主要进行hibernate相关的配置 -->
<beans default-autowire="byName" xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!--备用 
	
jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = oradrv)))
 jdbc:oracle:thin:oradrv/123456@127.0.0.1:1521:oradrv
 oci方式的jdbc url=”jdbc:oracle:oci:@mydb”;
-->
<!-- 备用the dataSource for oracle-->	
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:oradrv"/>
			<property name="username" value="austin"/>
			<property name="password" value="stjj117"/>

		</bean>
	
<!--jndi
<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
  <property name="resourceRef">
  <value>true</value>
  </property>
  <property name="jndiName">
  <value>oradrvsource</value>
  </property>
  </bean>  
-->
<!--c3p0
<bean id="dataSource"
class="com.mchange.v2.c3p0.ComboPooledDataSource"
destroy-method="close">
<property name="driverClass">
<value>oracle.jdbc.OracleDriver</value>
</property>
<property name="jdbcUrl">
<value>jdbc:oracle:thin:@127.0.0.1:1521:oradrv</value>
</property>
<property name="user">
<value>oradrv</value>
</property>
<property name="password">
<value>iama9701</value>
</property>
</bean>
-->
	<!--proxool
	<bean id="dataSource"
		class="org.logicalcobwebs.proxool.ProxoolDataSource" destroy-method="org.logicalcobwebs.proxool.ProxoolFacade.shutdown()">
		<property name="driver">
			<value>oracle.jdbc.OracleDriver</value>
		</property>
		<property name="driverUrl">
			<value>jdbc:oracle:thin:oradrv/iama9701@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SID = oradrv)))</value>
		</property>
		<property name="user" value="oradrv" />
		<property name="password" value="iama9701" />
		<property name="alias" value="Pool_oradrv" />
		
		
		<property name="prototypeCount" value="0" />
		<property name="maximumConnectionCount" value="50" />
		<property name="minimumConnectionCount" value="2" />
		<property name="simultaneousBuildThrottle" value="50" />
		
		<property name="houseKeepingTestSql" value="select sysdate from dual" />
	</bean>
	-->
	<!--proxool 0.9.1<property name="maximumConnectionLifetime" value="14400000" />-->
	<!--proxool 0.9.1<property name="houseKeepingSleepTime" value="90000" />-->
	<!-- the dataSource for sqlserver	
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="com.microsoft.jdbc.sqlserver.SQLServerDriver"></property>
			<property name="url" value="jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=testdb"/>
			<property name="username" value="sa"/>
			<property name="password" value="sa"/>
		</bean>	
	
-->	
	
	
	<!-- the dataSource for oracle
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:oradrv"/>
			<property name="username" value="oradrv"/>
			<property name="password" value="iama9701"/>

		</bean>
		-->
		 
	<!-- the dataSource for mysql
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
			<property name="url" value="jdbc:mysql://localhost:3306/driversmanager?useUnicode=true&amp;characterEncoding=UTF-8"/>
			<property name="username" value="root"/>
			<property name="password" value="123"/>

		</bean>
		-->
	<!-- the dataSource for oracle
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:lineup"/>
			<property name="username" value="lineup"/>
			<property name="password" value="lineup"/>	
		</bean>
		-->
	
	<!-- the dataSource for oracle
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@192.168.1.111:1521:drivers"/>
			<property name="username" value="mydrivers"/>
			<property name="password" value="123456"/>

		</bean>-->
	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>com.**.model</value>
			</list>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.ett.model</value>
			</list>
		</property>
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration">
		</property> 
		<property name="mappingLocations">  
			<list>
				<value>classpath*:**/*.hbm.xml</value>
			</list>  
		</property> 
		
		<property name="annotatedClasses">
			<list>
				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.Oracle9iDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.hibernate.use_outer_join">true</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	<!-- 
			<bean id="openSessionInViewInterceptor"  
			   class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">  
			   <property name="sessionFactory" ref="sessionFactory"/>  
		   </bean>

			-->
   
	<!-- 
		   <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">   
			   <property name="interceptors">   
				   <list>   
					   <ref bean="openSessionInViewInterceptor" />   
				</list>   
			  </property>   
			  <property name="mappings">   
				<props>   
				 <prop key="main.do">mainFrameController</prop>   
			   </props>   
			 </property>   
		  </bean>  
		   -->
   
	<bean id="baseDao" class="com.ett.dao.BaseDaoHibernateImpl" />

	<!-- 这里的方法签名可以精确到方法, 先懒惰一下全配置上
		<bean id="hibernateDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
			<property name="proxyTargetClass">
				<value>true</value>
			</property> 
			<property name="target" ref="baseDao"/>  
			<property name="transactionAttributes">
		   <props>

			<prop key="*">PROPAGATION_REQUIRED</prop>
		   </props>
		  </property>
		</bean> -->

</beans>
