<?xml version="1.0" encoding="UTF-8"?>
<!--t 主要进行hibernate相关的配置 -->
<beans default-autowire="no" xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/tx/spring-aop-3.0.xsd
	"><!--备用 
	
jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 127.0.0.1)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = oradrv)))
 jdbc:oracle:thin:oradrv/123456@127.0.0.1:1521:oradrv
 oci方式的jdbc url=”jdbc:oracle:oci:@mydb”;
-->
<!-- 备用the dataSource for oracle	
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:oradrv"/>
			<property name="username" value="austin"/>
			<property name="password" value="stjj117"/>

		</bean>
	-->
	<bean id="dataSourceMybatis" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
			<property name="url" value="jdbc:oracle:thin:@192.168.1.10:1521:oradrvde"/>
			<property name="username" value="aspnet"/>
			<property name="password" value="stjj117"/>

		</bean>
	
 <bean id="sqlSessionFactoryMybatis" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSourceMybatis" />  
        <property name="configLocation" value="classpath:com/ett/self/dao/mapper/test-mybatis-test.xml"></property>  
    </bean>  
    <!-- 
    <bean          
     class="org.mybatis.spring.annotation.MapperScannerPostProcessor">   
    	<property name="sqlSessionFactoryBeanName"    
              value="sqlSessionFactoryMybatis" />   
    	<property name="basePackage" value="ett.self.dao" />   
	</bean>  
	 -->
    
    <!-- ================================= mapper ============================================= -->  
    <!-- 人员mapper -->  
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
        <property name="sqlSessionFactory" ref="sqlSessionFactoryMybatis"/>  
        <!-- mapper的位置 -->  
        <property name="mapperInterface" value="com.ett.self.dao.mapper.DrvUserMapper"/>  
    </bean>  
       
    <!-- ================================= 事务控制相关 ============================================= -->  
    <bean name="transactionManagerMybatis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">      
        <property name="dataSource" ref="dataSourceMybatis"></property>  
    </bean>      
       
    <tx:advice id="txAdviceMybatis" transaction-manager="transactionManagerMybatis">  
        <tx:attributes>  
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"    
                       rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>  
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"    
                       rollback-for="java.lang.RuntimeException" />  
            <tx:method name="update*" propagation="REQUIRED" read-only="false"    
                       rollback-for="java.lang.Exception" />  
               
            <tx:method name="find*" propagation="SUPPORTS"/>  
            <tx:method name="get*" propagation="SUPPORTS"/>  
            <tx:method name="select*" propagation="SUPPORTS"/>  
        </tx:attributes>  
    </tx:advice> 
    <!-- 
     <aop:config>
     <aop:pointcut id="newServicesPointcut2" expression="execution(* com.cib.creditaudit.service.*.*(..))"/>
        <aop:advisor pointcut-ref="newServicesPointcut2" advice-ref="txAdviceMybatis"></aop:advisor>
        
    </aop:config>
     -->
       

</beans>
